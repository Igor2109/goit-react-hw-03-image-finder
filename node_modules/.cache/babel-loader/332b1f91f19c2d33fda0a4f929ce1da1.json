{"ast":null,"code":"var _jsxFileName = \"/Users/Igor/Documents/GitHub/react/modul2/goit-react-hw-03-image-finder/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { ImageGallery } from './ImageGallery/ImageGallery';\nimport { ImageGalleryItem } from './ImageGalleryItem/ImageGalleryItem';\nimport { Loader } from './Loader/Loader';\nimport { Button } from './Button/Button';\nimport { Modal } from './Modal/Modal';\nimport { handleSearch } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: '',\n      images: [],\n      page: 1,\n      isLoading: false,\n      error: null,\n      isModalOpen: false,\n      selectedImageURL: ''\n    };\n\n    this.handleSearchSubmit = query => {\n      if (!query.trim()) {\n        alert('Please enter a valid search query.');\n        return;\n      }\n\n      this.setState({\n        query,\n        images: [],\n        page: 1,\n        isLoading: true,\n        error: null\n      }, () => {\n        this.loadImages();\n      });\n    };\n\n    this.loadImages = async () => {\n      const {\n        query,\n        page\n      } = this.state;\n\n      try {\n        const newImages = await handleSearch(query, page);\n        this.setState(prevState => ({\n          images: [...prevState.images, ...newImages],\n          page: prevState.page + 1\n        }));\n      } catch (error) {\n        this.setState({\n          error\n        });\n        console.error('Error loading images:', error);\n      } finally {\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    this.loadMoreImages = () => {\n      this.loadImages();\n    };\n\n    this.openModal = imageURL => {\n      this.setState({\n        isModalOpen: true,\n        selectedImageURL: imageURL\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isModalOpen: false,\n        selectedImageURL: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      images,\n      isLoading,\n      error,\n      isModalOpen,\n      selectedImageURL\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: CSS.App,\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.handleSearchSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        children: images.map(image => /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n          image: image,\n          onClick: () => this.openModal(image.largeImageURL)\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 22\n      }, this) : null, images.length > 0 && !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.loadMoreImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: CSS.Error,\n        children: \"Error loading images.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        imageURL: selectedImageURL,\n        onClose: this.closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Igor/Documents/GitHub/react/modul2/goit-react-hw-03-image-finder/src/components/App.jsx"],"names":["React","Component","Searchbar","ImageGallery","ImageGalleryItem","Loader","Button","Modal","handleSearch","App","state","query","images","page","isLoading","error","isModalOpen","selectedImageURL","handleSearchSubmit","trim","alert","setState","loadImages","newImages","prevState","console","loadMoreImages","openModal","imageURL","closeModal","render","CSS","map","image","largeImageURL","id","length","Error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { ImageGallery } from './ImageGallery/ImageGallery';\nimport { ImageGalleryItem } from './ImageGalleryItem/ImageGalleryItem';\nimport { Loader } from './Loader/Loader';\nimport { Button } from './Button/Button';\nimport { Modal } from './Modal/Modal';\nimport { handleSearch } from './api';\nexport class App extends Component {\n  state = {\n    query: '',\n    images: [],\n    page: 1,\n    isLoading: false,\n    error: null,\n    isModalOpen: false,\n    selectedImageURL: '',\n  };\n  handleSearchSubmit = query => {\n    if (!query.trim()) {\n      alert('Please enter a valid search query.');\n      return;\n    }\n\n    this.setState(\n      { query, images: [], page: 1, isLoading: true, error: null },\n      () => {\n        this.loadImages();\n      }\n    );\n  };\n\n  loadImages = async () => {\n    const { query, page } = this.state;\n\n    try {\n      const newImages = await handleSearch(query, page);\n      this.setState(prevState => ({\n        images: [...prevState.images, ...newImages],\n        page: prevState.page + 1,\n      }));\n    } catch (error) {\n      this.setState({ error });\n      console.error('Error loading images:', error);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  loadMoreImages = () => {\n    this.loadImages();\n  };\n\n  openModal = imageURL => {\n    this.setState({\n      isModalOpen: true,\n      selectedImageURL: imageURL,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      isModalOpen: false,\n      selectedImageURL: '',\n    });\n  };\n\n  render() {\n    const { images, isLoading, error, isModalOpen, selectedImageURL } =\n      this.state;\n\n    return (\n      <div className={CSS.App}>\n        <Searchbar onSubmit={this.handleSearchSubmit} />\n        <ImageGallery>\n          {images.map(image => (\n            <ImageGalleryItem\n              key={image.id}\n              image={image}\n              onClick={() => this.openModal(image.largeImageURL)}\n            />\n          ))}\n        </ImageGallery>\n        {isLoading ? <Loader /> : null}\n        {images.length > 0 && !isLoading && (\n          <Button onClick={this.loadMoreImages} />\n        )}\n        {error && <p className={CSS.Error}>Error loading images.</p>}\n        {isModalOpen && (\n          <Modal\n            isOpen={isModalOpen}\n            imageURL={selectedImageURL}\n            onClose={this.closeModal}\n          />\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}